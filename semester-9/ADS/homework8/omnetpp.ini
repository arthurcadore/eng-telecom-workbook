[General]
network = HandoverShowcase
sim-time-limit = 100s

# MAC address manual para garantir unicidade
*.host1.eth[0].macAddress = "00:00:00:00:00:01"
*.ap1.eth[0].macAddress = "00:00:00:00:00:02"
*.ap2.eth[0].macAddress = "00:00:00:00:00:03"
*.host2.eth[0].macAddress = "00:00:00:00:00:04"
*.switch.eth[*].macAddress = auto

# Ativa a configuração automática de IP
*.configurator.config = xmldoc("config.xml")

# ARP global
*.**.ipv4.arp.typename = "GlobalArp"
*.**.ipv4.arp.retryTimeout = 1s

# Ativa pingApp em host2 para testar conectividade
*.host2.numApps = 1
*.host2.app[0].typename = "PingApp"
*.host2.app[0].destAddr = "10.0.0.1"  # ping do host2 para host1
*.host2.app[0].startTime = 1s
*.host2.app[0].count = 5

# Desativa configurador automático de IP para usar IPs estáticos
**.networkConfiguratorModule = ""

# Ativa bridging L2 nos APs entre wlan e eth
**.ap1.hasEthernetBridging = true
**.ap2.hasEthernetBridging = true

# IPs estáticos e rotas padrão
*.host1.ipv4.address = "10.0.0.2"
*.host1.ipv4.netmask = "255.255.255.0"
*.host1.wlan[0].mgmt.associateToSsid = "AP1"

*.host2.ipv4.address = "10.0.0.3"
*.host2.ipv4.netmask = "255.255.255.0"
*.host2.ipv4.defaultGateways = "10.0.0.1"

*.ap1.ipv4.address = "10.0.0.1"
*.ap1.ipv4.netmask = "255.255.255.0"

# Força MAC na interface cabeada do host2 (ajuste o índice se necessário)
*.host2.ethg.macAddress = "00-00-00-00-00-02"

# Ativa logs detalhados de camada MAC ethernet para debug
*.host2.ethg.mac.verbose = true
*.sw.ethg.mac.verbose = true

# management submodule parameters
**.mgmt.numChannels = 5

# Access Points Wi-Fi
**.ap1.wlan[*].mgmt.ssid = "AP1"
**.ap2.wlan[*].mgmt.ssid = "AP2"
**.ap*.wlan[*].mgmt.beaconInterval = 100ms

# Mobilidade do host1 (wireless)
*.host1.mobility.typename = "LinearMobility"
*.host1.mobility.speed = 10mps
*.host1.mobility.initialMovementHeading = 0deg
*.host1.mobility.updateInterval = 100ms
*.host1.mobility.constraintAreaMinX = 40m
*.host1.mobility.constraintAreaMaxX = 600m

# Canais de rádio Wi-Fi
**.analogModel.ignorePartialInterference = true
**.ap1.wlan[*].radio.channelNumber = 2
**.ap2.wlan[*].radio.channelNumber = 3
**.host1.wlan[*].radio.channelNumber = 0  # escaneia todos no início

# Potência de transmissão do rádio
**.radio.transmitter.power = 2.0mW

# Configurações do agente Wi-Fi (scan ativo, probe, etc)
**.wlan[*].agent.activeScan = true
**.wlan[*].agent.defaultSsid = ""
**.wlan[*].agent.channelsToScan = ""
**.wlan[*].agent.probeDelay = 0.1s
**.wlan[*].agent.minChannelTime = 0.15s
**.wlan[*].agent.maxChannelTime = 0.3s

# Aplicações UDP no host1 (cliente) e host2 (sink)
*.host1.numUdpApps = 1
*.host1.udpApp[0].typename = "UDPBasicApp"
*.host1.udpApp[0].destAddresses = "host2"
*.host1.udpApp[0].destPort = 1000
*.host1.udpApp[0].messageLength = exponential(1000B)
*.host1.udpApp[0].sendInterval = 0.1s
*.host1.udpApp[0].startTime = 1s
*.host1.udpApp[0].stopTime = 99s
*.host1.udpApp[0].verbose = true
*.host1.udpApp[0].packetName = "UDPData"
*.host1.udpApp[0].numPk = 1000

*.host2.numUdpApps = 1
*.host2.udpApp[0].typename = "UDPSink"
*.host2.udpApp[0].localPort = 1000
*.host2.udpApp[0].verbose = true

# Aplicações TCP no host1 (cliente) e host2 (servidor)
*.host1.numTcpApps = 1
*.host1.tcpApp[0].typename = "TcpBasicClient"
*.host1.tcpApp[0].connectAddress = "host2"
*.host1.tcpApp[0].connectPort = 2000
*.host1.tcpApp[0].startTime = 1s
*.host1.tcpApp[0].stopTime = 99s
*.host1.tcpApp[0].verbose = true
*.host1.tcpApp[0].messageLength = 1000B
*.host1.tcpApp[0].sendBytes = 1000000

*.host2.numTcpApps = 1
*.host2.tcpApp[0].typename = "TcpBasicServer"
*.host2.tcpApp[0].localPort = 2000
*.host2.tcpApp[0].verbose = true

# Logging verbose geral
**.verbose = true
**.debug = true

# Estatísticas UDP e TCP para hosts
*.host1.udpApp[0].recordPacketsSent = true
*.host1.udpApp[0].recordBytesSent = true
*.host1.udpApp[0].recordPacketsReceived = true
*.host1.udpApp[0].recordBytesReceived = true
*.host2.udpApp[0].recordPacketsReceived = true
*.host2.udpApp[0].recordBytesReceived = true

*.host1.tcpApp[0].recordPacketsSent = true
*.host1.tcpApp[0].recordBytesSent = true
*.host1.tcpApp[0].recordPacketsReceived = true
*.host1.tcpApp[0].recordBytesReceived = true
*.host2.tcpApp[0].recordPacketsReceived = true
*.host2.tcpApp[0].recordBytesReceived = true

# Estatísticas para handover Wi-Fi no host1
*.host1.wlan[*].agent.recordHandoverAttempts = true
*.host1.wlan[*].agent.recordHandoverSuccesses = true
*.host1.wlan[*].agent.recordHandoverFailures = true
*.host1.wlan[*].agent.recordHandoverDuration = true
*.host1.wlan[*].agent.recordHandoverLatency = true

# Qualidade do sinal Wi-Fi no host1
*.host1.wlan[*].radio.recordSignalStrength = true
*.host1.wlan[*].radio.recordSNR = true
*.host1.wlan[*].radio.recordBitErrorRate = true
*.host1.wlan[*].radio.recordPacketErrorRate = true

# Perda de pacotes e retransmissões no MAC Wi-Fi do host1
*.host1.wlan[*].mac.recordPacketLoss = true
*.host1.wlan[*].mac.recordRetries = true
*.host1.wlan[*].mac.recordRetransmissions = true

# Visualização
*.visualizer.physicalLinkVisualizer.displayLinks = true
*.ap*.wlan[*].radio.displayCommunicationRange = true

# Estatísticas em vetor para aplicações e camadas Wi-Fi
*.host1.udpApp[*].statistic-recording = "vector"
*.host2.udpApp[*].statistic-recording = "vector"
*.host1.tcpApp[*].statistic-recording = "vector"
*.host2.tcpApp[*].statistic-recording = "vector"
*.host1.wlan[*].agent.statistic-recording = "vector"
*.host1.wlan[*].radio.statistic-recording = "vector"
*.host1.wlan[*].mac.statistic-recording = "vector"
